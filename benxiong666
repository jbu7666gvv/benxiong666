-- 环境检查和安全函数定义
local function safeRequire(func, fallback)
    local success, result = pcall(func)
    return success and result or fallback
end

-- 缓存常用函数
local task_wait = task.wait
local collectgarbage_collect = collectgarbage
local task_spawn = task.spawn

-- 简单的颜色系统（移除动态效果）
local ColorSystem = {
    primaryColor = Color3.fromRGB(0, 170, 255),
    successColor = Color3.fromRGB(0, 255, 0),
    errorColor = Color3.fromRGB(255, 0, 0),
    warningColor = Color3.fromRGB(255, 165, 0)
}

-- 安全的 HTTP 获取
local function httpGet(url)
    local success, result = pcall(function()
        if game.HttpGet then
            return game:HttpGet(url, true)
        elseif syn and syn.request then
            local response = syn.request({Url = url, Method = "GET"})
            return response.Body
        elseif request then
            local response = request({Url = url, Method = "GET"})
            return response.Body
        else
            error("没有可用的 HTTP 方法")
        end
    end)
    return success and result or nil
end

-- 安全的剪贴板操作
local function safeSetClipboard(text)
    local success, err = pcall(function()
        if setclipboard then
            setclipboard(text)
        elseif syn and syn.write_clipboard then
            syn.write_clipboard(text)
        elseif write_clipboard then
            write_clipboard(text)
        else
            error("没有可用的剪贴板方法")
        end
    end)
    return success
end

-- 安全调用函数
local function safeCall(func, errorMessage)
    local success, err = pcall(func)
    if not success then
        if WindUI then
            WindUI:Notify({
                Title = "错误", 
                Content = errorMessage .. ": " .. tostring(err), 
                Duration = 5,
                Color = ColorSystem.errorColor
            })
        end
    end
    return success
end

-- 加载 WindUI 库
local WindUISuccess, WindUI = pcall(function()
    local windUISource = httpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua")
    if windUISource then
        local windUI = loadstring(windUISource)()
        return windUI
    else
        error("无法加载 WindUI 库")
    end
end)

if not WindUISuccess then
    warn("WindUI 加载失败: " .. tostring(WindUI))
    -- 尝试备用源
    local backupSuccess, backupWindUI = pcall(function()
        local backupSource = httpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/source.lua")
        if backupSource then
            return loadstring(backupSource)()
        else
            error("备用源也加载失败")
        end
    end)
    
    if not backupSuccess then
        warn("WindUI 备用源也加载失败")
        return
    else
        WindUI = backupWindUI
        WindUISuccess = true
    end
end

-- 等待 WindUI 完全加载
if not WindUI then
    warn("WindUI 库未正确加载")
    return
end

-- 添加调试信息
print("WindUI 库加载成功，开始创建界面...")

local function loadScript(url, scriptName)
    WindUI:Notify({
        Title = "提示", 
        Content = "正在加载 " .. scriptName .. "...", 
        Duration = 2,
        Color = ColorSystem.primaryColor
    })
    
    local success, result = pcall(function()
        local response = httpGet(url)
        if not response or #response < 50 then
            return false, "脚本内容无效或为空"
        end
        
        local loadedFunction, loadError = loadstring(response)
        if not loadedFunction then
            return false, "脚本编译错误: " .. tostring(loadError)
        end
        
        local executeSuccess, executeError = pcall(loadedFunction)
        if not executeSuccess then
            return false, "脚本执行错误: " .. tostring(executeError)
        end
        
        return true
    end)
    
    if success and result then
        WindUI:Notify({
            Title = "成功", 
            Content = scriptName .. " 加载完成", 
            Duration = 3,
            Color = ColorSystem.successColor
        })
    else
        local errorMsg = success and result or "网络请求失败"
        WindUI:Notify({
            Title = "错误", 
            Content = scriptName .. " 加载失败: " .. errorMsg, 
            Duration = 5,
            Color = ColorSystem.errorColor
        })
    end
end

local Confirmed = false

-- 创建欢迎弹窗
WindUI:Popup({
    Title = "欢迎使用本熊汉化",
    Icon = "rbxassetid://112682688917044",
    IconThemed = true,
    Content = "本熊汉化 1.5.1",
    Buttons = {
        {
            Title = "退出",
            Callback = function() 
                WindUI:Notify({
                    Title = "提示", 
                    Content = "已退出", 
                    Duration = 2,
                    Color = ColorSystem.primaryColor
                })
            end,
            Variant = "Secondary",
        },
        {
            Title = "使用",
            Icon = "arrow-right",
            Callback = function() 
                Confirmed = true 
                WindUI:Notify({
                    Title = "欢迎", 
                    Content = "开始使用本熊汉化", 
                    Duration = 2,
                    Color = ColorSystem.successColor
                })
            end,
            Variant = "Primary",
        }
    }
})

repeat task_wait() until Confirmed

print("开始创建主窗口...")

-- 创建主窗口 - 简化配置
local Window = WindUI:CreateWindow({
    Title = "本熊汉化 1.5.1",
    Icon = "rbxassetid://129260712070622",
    SubTitle = "简洁稳定版",
    Size = UDim2.fromOffset(600, 500),
    Theme = "Dark"
})

print("主窗口创建成功，开始创建标签页...")

-- 创建标签页 - 使用更简单的方式
local Tabs = {}

-- 逐个创建标签页，确保每个都成功
local tabNames = {
    {name = "Home", title = "主页", icon = "home"},
    {name = "KeyManager", title = "密钥管理", icon = "key"},
    {name = "AutoTranslate", title = "自动汉化", icon = "languages"},
    {name = "Main", title = "99夜", icon = "zap"},
    {name = "Ninja", title = "死铁轨", icon = "user"},
    {name = "Oth", title = "偷走脑红", icon = "heart"},
    {name = "General", title = "通用", icon = "settings"},
    {name = "FlyAndTeleport", title = "甩飞与传送", icon = "rocket"},
    {name = "Other", title = "工具", icon = "tool"}
}

for i, tabInfo in ipairs(tabNames) do
    local success, tab = pcall(function()
        return Window:Tab({
            Title = tabInfo.title,
            Icon = tabInfo.icon
        })
    end)
    
    if success then
        Tabs[tabInfo.name] = tab
        print("标签页创建成功: " .. tabInfo.title)
    else
        warn("标签页创建失败: " .. tabInfo.title)
        -- 创建备用标签页
        Tabs[tabInfo.name] = Window:Tab({
            Title = tabInfo.title
        })
    end
end

print("所有标签页创建完成")

-- 默认选择第一个标签页
pcall(function()
    Window:SelectTab(1)
end)

-- 主页内容
if Tabs.Home then
    Tabs.Home:Paragraph({
        Title = "欢迎使用本熊汉化",
        Desc = "为Roblox脚本提供汉化 - 简洁稳定版！",
    })

    Tabs.Home:Paragraph({
        Title = "更新内容",
        Desc = "我懒得写，自己看",
    })

    Tabs.Home:Section({Title = "信息"})

    Tabs.Home:Button({
        Title = "复制QQ群号",
        Callback = function()
            if safeSetClipboard("168985587") then
                WindUI:Notify({
                    Title = "成功", 
                    Content = "QQ群号已复制到剪贴板", 
                    Duration = 3,
                    Color = ColorSystem.successColor
                })
            else
                WindUI:Notify({
                    Title = "错误", 
                    Content = "剪贴板复制失败", 
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })

    Tabs.Home:Button({
        Title = "复制快手号",
        Callback = function()
            if safeSetClipboard("lousun7891") then
                WindUI:Notify({
                    Title = "成功", 
                    Content = "快手号已复制到剪贴板", 
                    Duration = 3,
                    Color = ColorSystem.successColor
                })
            else
                WindUI:Notify({
                    Title = "错误", 
                    Content = "剪贴板复制失败", 
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })
end

-- 通用功能标签页 - 使用按钮替代滑动条
if Tabs.General then
    Tabs.General:Section({Title = "移动设置 - 按钮版"})

    -- 速度设置按钮组
    local currentSpeed = 16
    local currentJump = 50

    Tabs.General:Label({Title = "当前速度: " .. currentSpeed})
    Tabs.General:Label({Title = "当前跳跃: " .. currentJump})

    -- 速度按钮
    Tabs.General:Button({
        Title = "速度 +10",
        Callback = function()
            currentSpeed = math.min(200, currentSpeed + 10)
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = currentSpeed
            end
            WindUI:Notify({
                Title = "速度设置",
                Content = "速度已设置为: " .. currentSpeed,
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
        end
    })

    Tabs.General:Button({
        Title = "速度 -10", 
        Callback = function()
            currentSpeed = math.max(16, currentSpeed - 10)
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = currentSpeed
            end
            WindUI:Notify({
                Title = "速度设置",
                Content = "速度已设置为: " .. currentSpeed,
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
        end
    })

    -- 跳跃按钮
    Tabs.General:Button({
        Title = "跳跃 +10",
        Callback = function()
            currentJump = math.min(200, currentJump + 10)
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = currentJump
            end
            WindUI:Notify({
                Title = "跳跃设置", 
                Content = "跳跃高度已设置为: " .. currentJump,
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
        end
    })

    Tabs.General:Button({
        Title = "跳跃 -10",
        Callback = function()
            currentJump = math.max(50, currentJump - 10)
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = currentJump
            end
            WindUI:Notify({
                Title = "跳跃设置",
                Content = "跳跃高度已设置为: " .. currentJump, 
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
        end
    })

    -- 重置按钮
    Tabs.General:Button({
        Title = "重置移动设置",
        Callback = function()
            currentSpeed = 16
            currentJump = 50
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = currentSpeed
                character.Humanoid.JumpPower = currentJump
            end
            WindUI:Notify({
                Title = "重置成功",
                Content = "移动设置已重置",
                Duration = 3,
                Color = ColorSystem.successColor
            })
        end
    })

    -- 其他通用功能保持不变...
    Tabs.General:Section({Title = "视觉功能"})

    Tabs.General:Toggle({
        Title = "夜视",
        Default = false,
        Callback = function(value)
            if value then
                game.Lighting.Ambient = Color3.new(1, 1, 1)
                game.Lighting.Brightness = 1
            else
                game.Lighting.Ambient = Color3.new(0, 0, 0)
                game.Lighting.Brightness = 1
            end
        end
    })

    -- ... 其他按钮保持不变
end

-- 其他标签页内容（简化版，确保不会因为错误导致标签页消失）
if Tabs.KeyManager then
    Tabs.KeyManager:Section({Title = "密钥状态"})
    Tabs.KeyManager:Paragraph({
        Title = "密钥信息",
        Desc = "当前密钥系统已启用，支持自动保存和验证"
    })
end

if Tabs.AutoTranslate then
    Tabs.AutoTranslate:Section({Title = "自动汉化"})
    Tabs.AutoTranslate:Button({
        Title = "自动汉化",
        Desc = "自动汉化",
        Callback = function()
            loadScript("https://raw.githubusercontent.com/jbu7666gvv/zihan/refs/heads/main/zihan", "自动汉化脚本")
        end
    })
end

-- 99夜标签页
if Tabs.Main then
    Tabs.Main:Section({Title = "99夜"})
    
    local mainScripts = {
        {Title = "h4x (要卡密)", Desc = "汉化", URL = "https://raw.githubusercontent.com/jbu7666gvv/h4x6/refs/heads/main/h4x%E6%B1%89%E5%8C%96"},
        {Title = "虚空 (无卡密)", Desc = "汉化", URL = "https://raw.githubusercontent.com/jbu7666gvv/xuu/refs/heads/main/xuu"},
        {Title = "ToastyXD Hub (要卡密)", Desc = "汉化", URL = "https://raw.githubusercontent.com/jbu7666gvv/toastyxdhub/refs/heads/main/toastyxdhub"},
    }
    
    for i, scriptInfo in ipairs(mainScripts) do
        Tabs.Main:Button({
            Title = scriptInfo.Title,
            Desc = scriptInfo.Desc,
            Callback = function()
                loadScript(scriptInfo.URL, scriptInfo.Title)
            end
        })
    end
end

-- 其他标签页类似处理...

-- 完成通知
WindUI:Notify({
    Title = "本熊汉化 - 简洁稳定版", 
    Content = "界面加载完成！", 
    Duration = 4,
    Color = ColorSystem.successColor
})

print("本熊汉化界面加载完成")
