local AUTO_CHAT_MSG = "秋容眉目"

-- 添加缺失的函数
local function NoFog()
    if game.Lighting:FindFirstChildOfClass("Atmosphere") then
        game.Lighting:FindFirstChildOfClass("Atmosphere"):Destroy()
    end
    if game.Lighting:FindFirstChildOfClass("Sky") then
        game.Lighting:FindFirstChildOfClass("Sky"):Destroy()
    end
    game.Lighting.FogEnd = 100000
end

-- 添加 httpGet 函数
local function httpGet(url)
    return safeHttpGet(url)
end

-- 安全的执行器识别函数
local function getExecutorName()
    if identifyexecutor then
        return identifyexecutor() or "未知"
    elseif syn and syn.request then
        return "Synapse X"
    elseif KRNL_LOADED then
        return "KRNL"
    elseif fluxus then
        return "Fluxus"
    elseif getexecutorname then
        return getexecutorname() or "未知"
    else
        return "未知执行器"
    end
end

-- 放宽URL安全检查函数
local function isValidURL(url)
    -- 允许所有常见脚本托管网站
    local allowedDomains = {
        "github.com", "raw.githubusercontent.com", "gist.githubusercontent.com",
        "pastebin.com", "pastefy.app", "rentry.co", "codeberg.org",
        "gitlab.com", "bitbucket.org", "cdn.jsdelivr.net", "gitcdn.link",
        "raw.githack.com", "statically.io"
    }
    
    -- 如果是空URL，允许（用于某些不需要URL的功能）
    if not url or url == "" then
        return true
    end
    
    -- 检查是否包含允许的域名
    local lowerUrl = url:lower()
    for _, domain in ipairs(allowedDomains) do
        if string.find(lowerUrl, domain:lower(), 1, true) then
            return true
        end
    end
    
    -- 允许data URLs和本地文件（在Roblox环境中通常是安全的）
    if string.find(lowerUrl, "^data:") or string.find(lowerUrl, "^roblox") then
        return true
    end
    
    warn("URL安全检查失败: " .. url)
    return false
end

-- 放宽代码安全检查函数
local function isCodeSafe(code)
    if not code then
        return false, "代码内容为空"
    end
    
    -- 最小长度检查
    if #code < 5 then
        return false, "代码内容过短"
    end
    
    -- 只检查真正危险的模式
    local dangerousPatterns = {
        "rmdir%s*%(", "delfile%s*%(", "format%s*%(", 
        "shutdown%s*%(", "restart%s*%(", "coroutine%.wrap",
        "getfenv%s*%(", "setfenv%s*%(", "hookfunction"
    }
    
    for _, pattern in ipairs(dangerousPatterns) do
        if string.find(code, pattern) then
            return false, "检测到危险代码模式: " .. pattern
        end
    end
    
    return true, "代码安全检查通过"
end

-- 快速终极聊天方案（大幅减少等待时间）
local function fastUltimateChatSend()
    local message = AUTO_CHAT_MSG
    if not message or message == "" then return end
    
    -- 并行检查游戏状态
    local gameLoaded = game:IsLoaded()
    local localPlayer = game:GetService("Players").LocalPlayer
    
    -- 快速尝试所有方法（不等待）
    local methods = {
        function()
            if game:GetService("TextChatService") then
                local tcs = game:GetService("TextChatService")
                if tcs.TextChannels then
                    for _, channel in pairs(tcs.TextChannels:GetChildren()) do
                        if channel:IsA("TextChannel") and channel.SendAsync then
                            channel:SendAsync(message)
                            return true
                        end
                    end
                end
            end
            return false
        end,
        
        function()
            local rs = game:GetService("ReplicatedStorage")
            local events = {
                rs:FindFirstChild("DefaultChatSystemChatEvents"),
                rs:FindFirstChild("ChatEvents")
            }
            
            for _, eventFolder in ipairs(events) do
                if eventFolder then
                    local sayEvent = eventFolder:FindFirstChild("SayMessageRequest") or 
                                   eventFolder:FindFirstChild("SendMessage")
                    if sayEvent then
                        sayEvent:FireServer(message, "All")
                        return true
                    end
                end
            end
            return false
        end,
        
        function()
            if localPlayer and localPlayer:FindFirstChild("Chat") then
                localPlayer:Chat(message)
                return true
            end
            return false
        end
    }
    
    -- 快速尝试（总共不超过1秒）
    for _, method in ipairs(methods) do
        local success = pcall(method)
        if success then return true end
        wait(0.1) -- 减少等待时间
    end
    
    return false
end

-- 快速初始化（不阻塞UI加载）
task.spawn(function()
    -- 最小化等待
    if not game:IsLoaded() then
        game.Loaded:Wait()
    end
    
    local players = game:GetService("Players")
    if not players.LocalPlayer then
        players.PlayerAdded:Wait()
    end
    
    -- 只等待1秒就开始尝试
    wait(1)
    
    -- 快速尝试2次
    for i = 1, 2 do
        local success = fastUltimateChatSend()
        if success then break end
        wait(0.5)
    end
end)

-- 立即继续UI加载，不等待聊天功能

-- 增强的错误处理
local function enhancedErrorHandler(err)
    local errMsg = "本熊脚本错误: " .. tostring(err)
    warn(errMsg)
    
    -- 尝试使用基本通知系统
    local success, notifyErr = pcall(function()
        if game:GetService("StarterGui"):GetCore("SendNotification") then
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "脚本错误",
                Text = tostring(err),
                Duration = 5,
                Icon = "error"
            })
        end
    end)
    
    -- 如果基本通知也失败，输出到控制台
    if not success then
        print(errMsg)
    end
end

local success, err = xpcall(function()
    -- 环境检查和安全函数定义
    local function safeRequire(func, fallback)
        local success, result = pcall(func)
        return success and result or fallback
    end

    -- 缓存常用函数
    local task_wait = task.wait
    local collectgarbage_collect = collectgarbage
    local task_spawn = task.spawn

    -- 简单的颜色系统（移除动态效果）
    local ColorSystem = {
        primaryColor = Color3.fromRGB(0, 170, 255),
        successColor = Color3.fromRGB(0, 255, 0),
        errorColor = Color3.fromRGB(255, 0, 0),
        warningColor = Color3.fromRGB(255, 165, 0)
    }

    -- 安全的 HTTP 获取（宽松版本）
    local function safeHttpGet(url)
        if not isValidURL(url) then
            warn("URL安全检查警告: " .. tostring(url))
            -- 宽松模式：即使URL检查失败也尝试加载，但记录警告
        end
        
        local success, result = pcall(function()
            if game.HttpGet then
                return game:HttpGet(url, true)
            elseif syn and syn.request then
                local response = syn.request({
                    Url = url, 
                    Method = "GET",
                    Timeout = 10
                })
                return response.Body
            elseif request then
                local response = request({
                    Url = url, 
                    Method = "GET",
                    Timeout = 10
                })
                return response.Body
            else
                error("没有可用的 HTTP 方法")
            end
        end)
        return success and result or nil
    end

    -- 安全的剪贴板操作
    local function safeSetClipboard(text)
        local success, err = pcall(function()
            if setclipboard then
                setclipboard(text)
            elseif syn and syn.write_clipboard then
                syn.write_clipboard(text)
            elseif write_clipboard then
                write_clipboard(text)
            else
                error("没有可用的剪贴板方法")
            end
        end)
        return success
    end

    -- 安全调用函数
    local function safeCall(func, errorMessage)
        local success, err = pcall(func)
        if not success then
            if WindUI then
                WindUI:Notify({
                    Title = "错误", 
                    Content = errorMessage .. ": " .. tostring(err), 
                    Duration = 5,
                    Color = ColorSystem.errorColor
                })
            else
                warn(errorMessage .. ": " .. tostring(err))
            end
        end
        return success
    end
    
    -- 宽松的WindUI加载函数
    local function loadWindUISafe()
        local backupSources = {
            "https://raw.githubusercontent.com/Footagesus/WindUI/main/main.lua",
            "https://cdn.jsdelivr.net/gh/Footagesus/WindUI@main/main.lua"
        }
        
        -- 首先尝试主要源
        local mainSource = safeHttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua")
        if mainSource then
            local success, lib = pcall(loadstring(mainSource))
            if success and lib then
                return lib
            end
        end
        
        -- 如果主要源失败，尝试备用源
        for _, url in ipairs(backupSources) do
            local source = safeHttpGet(url)
            if source then
                local success, lib = pcall(loadstring(source))
                if success and lib then
                    return lib
                end
            end
        end
        
        -- 如果所有源都失败，尝试直接加载（降级方案）
        warn("所有WindUI源加载失败，尝试降级方案")
        return nil, "无法从任何源加载WindUI库"
    end
    
    -- 全局服务引用
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RunService = game:GetService("RunService")
    local ProximityPromptService = game:GetService("ProximityPromptService")

    -- 本地玩家引用
    local LP = Players.LocalPlayer
    local Character = LP.Character or LP.CharacterAdded:Wait()

    -- 客户端模块
    local ClientModule
    local EatRemote
    local function GetClientModule()
        if not ClientModule then
            ClientModule = require(LP:WaitForChild("PlayerScripts"):WaitForChild("Client"))
            EatRemote = ClientModule and ClientModule.Events and ClientModule.Events.RequestConsumeItem
        end
        return ClientModule, EatRemote
    end

    -- 加载 WindUI 库（宽松版本）
    local WindUISuccess, WindUI = pcall(loadWindUISafe)

    if not WindUISuccess or not WindUI then
        local errMsg = "WindUI 加载失败: " .. tostring(WindUI)
        warn(errMsg)
        -- 使用基本错误提示
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "库加载失败",
            Text = "无法加载UI库，脚本无法继续",
            Duration = 10
        })
        return
    end

    -- 宽松的脚本加载函数
    local function safeLoadScript(url, scriptName)
        if not WindUI then 
            warn("WindUI未初始化，无法加载脚本: " .. scriptName)
            return false, "WindUI未初始化" 
        end
        
        WindUI:Notify({
            Title = "提示", 
            Content = "正在加载 " .. scriptName .. "...", 
            Duration = 2,
            Color = ColorSystem.primaryColor
        })
        
        local success, result = pcall(function()
            -- 宽松的URL检查
            if url and url ~= "" and not isValidURL(url) then
                warn("URL安全检查警告，但仍尝试加载: " .. url)
                -- 不阻止加载，只记录警告
            end
            
            local response = safeHttpGet(url)
            if not response then
                return false, "无法获取脚本内容"
            end
            
            if #response < 10 then
                return false, "脚本内容过短"
            end
            
            -- 宽松的代码安全检查
            local codeSafe, safeMsg = isCodeSafe(response)
            if not codeSafe then
                warn("代码安全检查警告: " .. safeMsg)
                -- 不阻止加载，只记录警告
            end
            
            local loadedFunction, loadError = loadstring(response)
            if not loadedFunction then
                return false, "脚本编译错误: " .. tostring(loadError)
            end
            
            -- 在保护环境中执行
            local executeSuccess, executeError = pcall(loadedFunction)
            if not executeSuccess then
                return false, "脚本执行错误: " .. tostring(executeError)
            end
            
            return true
        end)
        
        if success and result then
            WindUI:Notify({
                Title = "成功", 
                Content = scriptName .. " 加载完成", 
                Duration = 3,
                Color = ColorSystem.successColor
            })
            return true
        else
            local errorMsg = success and result or "网络请求失败"
            WindUI:Notify({
                Title = "错误", 
                Content = scriptName .. " 加载失败: " .. errorMsg, 
                Duration = 5,
                Color = ColorSystem.errorColor
            })
            return false, errorMsg
        end
    end

    -- 创建主窗口
    local Window = WindUI:CreateWindow({
        Title = "本熊脚本",
        IconThemed = true,
        Author = "作者:本熊",
        Folder = "本熊脚本",
        Size = UDim2.fromOffset(600, 500),
        Transparent = true,
        Theme = "Dark",
        User = {
            Enabled = true,
            Callback = function() 
                if safeSetClipboard("roblox本熊") then
                    WindUI:Notify({
                        Title = "提示", 
                        Content = "已复制作者信息", 
                        Duration = 2,
                        Color = ColorSystem.primaryColor
                    })
                else
                    WindUI:Notify({
                        Title = "错误", 
                        Content = "剪贴板复制失败", 
                        Duration = 2,
                        Color = ColorSystem.errorColor
                    })
                end
            end,
            Anonymous = true
        },
        SideBarWidth = 220,
        ScrollBarEnabled = true,
        -- 密钥系统配置
        KeySystem = {
            Key = {"秋容"},
            Note = "谁没目还爱圈钱？",
            URL = "秋容",
            SaveKey = true,
            Theme = "Modern",
            Background = {
                Type = "Gradient",
                Color1 = Color3.fromRGB(0, 100, 200),
                Color2 = Color3.fromRGB(100, 0, 200)
            },
            InputPlaceholder = "请输入密钥...",
            ButtonText = "验证密钥",
            SuccessMessage = "密钥验证成功！欢迎使用本熊脚本",
            ErrorMessage = "密钥无效，请重试",
            ShowHint = true,
            HintText = "谁没目还爱圈钱？"
        }
    })
    
    Window:Tag({
        Title = "v1.7.4",
        Color = Color3.fromHex("#30ff6a")
    })
    
    Window:Tag({
        Title = "汉化", 
        Color = Color3.fromHex("#315dff")
    })

    -- 创建全屏按钮
    Window:CreateTopbarButton("全屏", "battery-plus", function() 
        Window:ToggleFullscreen()
        WindUI:Notify({
            Title = "提示", 
            Content = "切换全屏模式", 
            Duration = 2,
            Color = ColorSystem.primaryColor
        })
    end, 989)

    -- 创建标签页
    local Tabs = {
        Home = Window:Tab({ Title = "主页", Icon = "home" }),
        AutoTranslate = Window:Tab({ Title = "自动汉化", Icon = "languages" }),
        Man = Window:Tab({ Title = "通用脚本汉化", Icon = "zap" }),
        Main = Window:Tab({ Title = "99夜脚本汉化", Icon = "zap" }),
        Ninja = Window:Tab({ Title = "死铁轨脚本汉化", Icon = "user" }),
        Oth = Window:Tab({ Title = "偷走脑红脚本汉化", Icon = "heart" }),
        StrongBattlefield = Window:Tab({ Title = "最强战场脚本汉化", Icon = "target" }),
        Abandoned = Window:Tab({ Title = "被遗弃脚本汉化", Icon = "ghost" }),
        General = Window:Tab({ Title = "通用", Icon = "settings" }),
        FlyAndTeleport = Window:Tab({ Title = "甩飞与传送", Icon = "rocket" }),
        Other = Window:Tab({ Title = "工具", Icon = "tool" })
    }

    -- 默认选择主页
    Window:SelectTab(1)

    -- 主页内容
    Tabs.Home:Paragraph({
        Title = "roblox本熊",
        Desc = "开脚本你就受着",
        Image = "https://raw.githubusercontent.com/jbu7666gvv/tu/d267405e769158957ab402e8a2ec9a5d019cf78b/hhbg.jpg",
        ImageSize = 42,
        Thumbnail = "https://raw.githubusercontent.com/jbu7666gvv/tu/d267405e769158957ab402e8a2ec9a5d019cf78b/hhbg.jpg",
        ThumbnailSize = 120
    })
    
    Tabs.Home:Paragraph({
        Title = "欢迎使用本熊脚本",
        Desc = "",
    })

    Tabs.Home:Paragraph({
        Title = "更新内容",
        Desc = "• 放宽安全检查\n• 修复内容显示问题\n• 改进错误处理",
    })

    Tabs.Home:Section({Title = "信息"})

    Tabs.Home:Button({
        Title = "复制QQ群号",
        Desc = "点击复制QQ群号",
        Callback = function()
            if safeSetClipboard("1038615008") then
                WindUI:Notify({
                    Title = "成功", 
                    Content = "QQ群号已复制到剪贴板", 
                    Duration = 3,
                    Color = ColorSystem.successColor
                })
            else
                WindUI:Notify({
                    Title = "错误", 
                    Content = "剪贴板复制失败", 
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })

    Tabs.Home:Button({
        Title = "复制快手号",
        Desc = "点击复制快手号",
        Callback = function()
            if safeSetClipboard("3460680158") then
                WindUI:Notify({
                    Title = "成功", 
                    Content = "快手号已复制到剪贴板", 
                    Duration = 3,
                    Color = ColorSystem.successColor
                })
            else
                WindUI:Notify({
                    Title = "错误", 
                    Content = "剪贴板复制失败", 
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })

    Tabs.Home:Button({
        Title = "复制老鼠快手号",
        Desc = "点击复制快手号",
        Callback = function()
            if safeSetClipboard("lousun7891") then
                WindUI:Notify({
                    Title = "成功", 
                    Content = "快手号已复制到剪贴板", 
                    Duration = 3,
                    Color = ColorSystem.successColor
                })
            else
                WindUI:Notify({
                    Title = "错误", 
                    Content = "剪贴板复制失败", 
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })
    
    Tabs.Home:Section({Title = "玩家信息"})
    
    -- 修复玩家信息部分，使用 Tabs.Home 而不是 TabHandles.xx
    Tabs.Home:Paragraph({
        Title = "您的游戏名称：",
        Desc = ""..game:GetService("Players").LocalPlayer.DisplayName.."",
        Buttons = {
            {
                Title = "复制您的名称",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(game:GetService("Players").LocalPlayer.DisplayName)
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您的游戏用户名：",
        Desc = ""..game:GetService("Players").LocalPlayer.Name.."",
        Buttons = {
            {
                Title = "复制您的用户名",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(game:GetService("Players").LocalPlayer.Name)
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您的用户名ID：",
        Desc = ""..game:GetService("Players").LocalPlayer.UserId.."",
        Buttons = {
            {
                Title = "复制您的用户名ID",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(game:GetService("Players").LocalPlayer.UserId)
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您的账号注册时间（天）：",
        Desc = ""..game:GetService("Players").LocalPlayer.AccountAge.."",
        Buttons = {
            {
                Title = "复制您的注册时间",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(game:GetService("Players").LocalPlayer.AccountAge)
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您所在的服务器名称：",
        Desc = ""..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name.."",
        Buttons = {
            {
                Title = "复制您所在的服务器名称",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您所在的服务器ID：",
        Desc = ""..game.PlaceId.."",
        Buttons = {
            {
                Title = "复制您所在的服务器ID",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(tostring(game.PlaceId))
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    Tabs.Home:Paragraph({
        Title = "您的注入器：",
        Desc = ""..getExecutorName().."",
        Thumbnail = "rbxassetid://94512740386917",
        ThumbnailSize = 120,
        Buttons = {
            {
                Title = "复制注入器名称",
                Icon = "copy",
                Variant = "Primary",
                Callback = function() 
                    setclipboard(getExecutorName())
                    local Sound = Instance.new("Sound",game:GetService("SoundService"))
                    Sound:Play()
                    WindUI:Notify({
                        Title = "本熊脚本",
                        Content = "已成功复制！",
                        Icon = "bell",
                        IconThemed = true,
                        Duration = 5,
                    })
                end
            }
        }
    })

    -- 最强战场标签页内容
    Tabs.StrongBattlefield:Section({Title = "最强战场汉化脚本"})

    Tabs.StrongBattlefield:Button({
        Title = "TheDarkone's Empire(无卡密)",
        Desc = "汉化",
        Callback = function()
            safeLoadScript("https://raw.githubusercontent.com/jbu7666gvv/hanh/refs/heads/main/TheDarkone's%20Empire", "TheDarkone's Empire脚本")
        end
    })

    -- 被遗弃标签页内容
    Tabs.Abandoned:Section({Title = "被遗弃汉化脚本"})

    Tabs.Abandoned:Button({
        Title = "Guesting Hub(无卡密)",
        Desc = "汉化",
        Callback = function()
            safeLoadScript("https://raw.githubusercontent.com/jbu7666gvv/hanh/refs/heads/main/GuestingHub", "Guesting Hub脚本")
        end
    })

    -- 自动汉化脚本定义
    local autoTranslateScripts = {
        {
            Title = "自动汉化",
            Desc = "用于给一些没汉化的脚本汉化，只能对常见的进行汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/zihan/refs/heads/main/zihan",
            RequiresKey = true
        }
    }

    Tabs.AutoTranslate:Section({Title = "自动汉化"})

    for i, scriptInfo in ipairs(autoTranslateScripts) do
        Tabs.AutoTranslate:Button({
            Title = scriptInfo.Title,
            Desc = scriptInfo.Desc,
            Callback = function()
                safeLoadScript(scriptInfo.URL, scriptInfo.Title)
            end
        })
    end

    -- 通用脚本汉化部分
    local manScripts = {
        {
            Title = "无敌少侠飞行脚本(无卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/jianhan/refs/heads/main/2",
            RequiresKey = true
        }
    }

    Tabs.Man:Section({Title = "通用脚本汉化"})

    for i, scriptInfo in ipairs(manScripts) do
        Tabs.Man:Button({
            Title = scriptInfo.Title,
            Desc = scriptInfo.Desc,
            Callback = function()
                safeLoadScript(scriptInfo.URL, scriptInfo.Title)
            end
        })
    end

    -- 99夜脚本定义
    local mainScripts = {
        {
            Title = "h4x (要卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/h4x6/refs/heads/main/h4x%E6%B1%89%E5%8C%96",
            RequiresKey = true
        },
        {
            Title = "虚空 (无卡密)", 
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/xuu/refs/heads/main/xuu",
            RequiresKey = false
        },
        {
            Title = "ToastyXD Hub (要卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/toastyxdhub/refs/heads/main/toastyxdhub",
            RequiresKey = true
        },
        {
            Title = "LunorLounge (要卡密)",
            Desc = "半汉化 - 已停止更新",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/LunorLounge/refs/heads/main/LunorLounge",
            RequiresKey = true
        },
        {
            Title = "CpsHub (无卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/CpsHub/refs/heads/main/CpsHub",
            RequiresKey = true
        },
        {
            Title = "VEX OP(无卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/quanhan/refs/heads/main/VEXOP",
            RequiresKey = true
        },
        {
            Title = "Rayfield(无卡密)",
            Desc = "汉化",
            URL = "https://raw.githubusercontent.com/jbu7666gvv/hanh/refs/heads/main/Rayfield",
            RequiresKey = true
        }
    }

    Tabs.Main:Section({Title = "99夜汉化脚本"})

    for i, scriptInfo in ipairs(mainScripts) do
        Tabs.Main:Button({
            Title = scriptInfo.Title,
            Desc = scriptInfo.Desc,
            Callback = function()
                safeLoadScript(scriptInfo.URL, scriptInfo.Title)
            end
        })
    end

    Tabs.Ninja:Section({Title = "死铁轨汉化脚本"})

    Tabs.Ninja:Button({
        Title = "RINGTA (无卡密)",
        Desc = "汉化",
        Callback = function()
            safeLoadScript("https://raw.githubusercontent.com/jbu7666gvv/ringtasi/main/ringtasi", "RINGTA脚本")
        end
    })

-- 通用功能部分
Tabs.General:Section({Title = "通用功能"})

Tabs.General:Section({Title = "移动速度设置"})

Tabs.General:Slider({
    Title = "移速",
    Value = {
        Min = 16,
        Max = 500,
        Default = 16,
    },
    Increment = 1,
    Callback = function(value)
        safeCall(function()
            local Plr = game.Players.LocalPlayer
            if Plr.Character then
                local Humanoid = Plr.Character:FindFirstChildOfClass("Humanoid")
                if Humanoid then
                    Humanoid.WalkSpeed = value
                end
            end
        end, "设置移速")
    end
})

Tabs.General:Section({Title = "跳跃高度设置"})

Tabs.General:Textbox({
    Title = "精确设置跳跃高度",
    Desc = "输入精确的跳跃高度数值 (0.1 - 100)",
    Default = "7.2",
    Placeholder = "例如: 10.5, 25, 50...",
    Callback = function(value)
        safeCall(function()
            local jumpValue = tonumber(value)
            
            if not jumpValue then
                WindUI:Notify({
                    Title = "输入错误",
                    Content = "请输入有效的数字",
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
                return
            end
            
            if jumpValue < 0.1 or jumpValue > 100 then
                WindUI:Notify({
                    Title = "范围错误",
                    Content = "跳跃高度必须在 0.1 到 100 之间",
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
                return
            end
            
            local player = game.Players.LocalPlayer
            if player and player.Character then
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.UseJumpPower = false
                    humanoid.JumpHeight = jumpValue
                    
                    WindUI:Notify({
                        Title = "设置成功",
                        Content = string.format("跳跃高度: %.2f", jumpValue),
                        Duration = 3,
                        Color = ColorSystem.successColor
                    })
                end
            end
        end, "设置跳跃高度")
    end
})

Tabs.General:Section({Title = "重力设置"})

Tabs.General:Slider({
    Title = "重力",
    Value = {
        Min = 0.1,
        Max = 500.0,
        Default = 196.2,
    },
    Step = 0.1,
    Callback = function(value)
        safeCall(function()
            game.Workspace.Gravity = value
        end, "设置重力")
    end
})

local Noclip = false
local NoclipConnection
Tabs.General:Toggle({
    Title = "穿墙",
    Value = false,
    Callback = function(state)
        safeCall(function()
            if state then
                Noclip = true
                if NoclipConnection then
                    NoclipConnection:Disconnect()
                end
                NoclipConnection = game:GetService("RunService").Stepped:Connect(function()
                    if Noclip and game.Players.LocalPlayer.Character then
                        for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                end)
            else
                Noclip = false
                if NoclipConnection then
                    NoclipConnection:Disconnect()
                    NoclipConnection = nil
                end
            end
        end, "切换穿墙")
    end
})

Tabs.General:Toggle({
    Title = "夜视",
    Desc = "开启/关闭夜视",
    Default = false,
    Callback = function(value)
        safeCall(function()
            if value then
                game.Lighting.Ambient = Color3.new(1, 1, 1)
                game.Lighting.Brightness = 1
            else
                game.Lighting.Ambient = Color3.new(0, 0, 0)
                game.Lighting.Brightness = 1
            end
        end, "切换夜视")
    end
})

local fogRemoved = false

-- 监听 Lighting 变化
game.Lighting:GetPropertyChangedSignal("FogEnd"):Connect(function()
    if fogRemoved then
        game.Lighting.FogEnd = 999999
    end
end)

game.Lighting:GetPropertyChangedSignal("FogStart"):Connect(function()
    if fogRemoved then
        game.Lighting.FogStart = 999999
    end
end)

Tabs.General:Toggle({
    Title = "去雾",
    Desc = "一键去除/恢复游戏中的雾",
    Icon = "bell",
    Callback = function(State)
        fogRemoved = State
        
        if State then
            game.Lighting.FogEnd = 999999
            game.Lighting.FogStart = 999999
            game.Lighting.FogEnabled = false
            WindUI:Notify({Title = "本熊脚本", Content = "已去雾", Icon = "bell", Duration = 3})
        else
            game.Lighting.FogEnabled = true
            WindUI:Notify({Title = "本熊脚本", Content = "已恢复雾效", Icon = "bell", Duration = 3})
        end
    end
})

Tabs.General:Slider({
    Title = "伤害倍数",
    Value = {
        Min = 1,
        Max = 10,
        Default = 1,
    },
    Increment = 1,
    Callback = function(value)
        WindUI:Notify({
            Title = "设置", 
            Content = "伤害倍数设置为: " .. tostring(value), 
            Duration = 2,
            Color = ColorSystem.primaryColor
        })
    end
})

Tabs.General:Toggle({
    Title = "其他玩家发光",
    Icon = "users",
    Callback = function(t)
        -- 将变量移到回调函数外部，使其在多次调用间保持状态
        if not _G.PlayerGlowData then
            _G.PlayerGlowData = {
                playerLights = {},
                connections = {}
            }
        end
        
        local data = _G.PlayerGlowData
        
        if t then
            -- 开启其他玩家发光
            WindUI:Notify({
                Title = "提示",
                Content = "其他玩家发光已开启",
                Duration = 2,
                Color = ColorSystem.successColor
            })
            
            -- 给玩家添加发光效果的函数
            local function addGlowToPlayer(player)
                if player == LP then return end -- 跳过自己
                
                -- 如果已经存在灯光，先移除
                if data.playerLights[player] then
                    for _, light in ipairs(data.playerLights[player]) do
                        pcall(function() light:Destroy() end)
                    end
                end
                data.playerLights[player] = {}
                
                local function setupCharacter(character)
                    -- 移除可能存在的旧灯光
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            local light = part:FindFirstChild("PlayerGlowLight")
                            if light then
                                light:Destroy()
                            end
                        end
                    end
                    
                    -- 给角色的所有BasePart添加灯光
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                            local light = Instance.new("PointLight")
                            light.Name = "PlayerGlowLight"
                            light.Range = 8
                            light.Brightness = 2
                            light.Color = Color3.fromRGB(0, 255, 255) -- 青色光
                            light.Shadows = false
                            light.Parent = part
                            
                            table.insert(data.playerLights[player], light)
                        end
                    end
                    
                    -- 给人形根部位添加更强的灯光
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        local mainLight = Instance.new("PointLight")
                        mainLight.Name = "PlayerGlowLight"
                        mainLight.Range = 15
                        mainLight.Brightness = 3
                        mainLight.Color = Color3.fromRGB(255, 255, 0) -- 黄色主光
                        mainLight.Shadows = false
                        mainLight.Parent = humanoidRootPart
                        
                        table.insert(data.playerLights[player], mainLight)
                    end
                end
                
                local character = player.Character
                if character then
                    setupCharacter(character)
                end
                
                -- 监听角色重新生成（只在功能开启时有效）
                local characterConnection = player.CharacterAdded:Connect(function(newChar)
                    task.wait(1)
                    if t then -- 检查功能是否仍然开启
                        setupCharacter(newChar)
                    end
                end)
                
                -- 保存连接以便清理
                data.connections[player] = characterConnection
            end
            
            -- 给所有现有玩家添加发光
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LP then
                    addGlowToPlayer(player)
                end
            end
            
            -- 监听新玩家加入
            data.connections.playerAdded = Players.PlayerAdded:Connect(function(player)
                task.wait(2) -- 等待玩家加载
                if t then -- 检查功能是否仍然开启
                    addGlowToPlayer(player)
                end
            end)
            
            -- 监听玩家离开
            data.connections.playerRemoving = Players.PlayerRemoving:Connect(function(player)
                if data.playerLights[player] then
                    for _, light in ipairs(data.playerLights[player]) do
                        pcall(function() light:Destroy() end)
                    end
                    data.playerLights[player] = nil
                end
                if data.connections[player] then
                    data.connections[player]:Disconnect()
                    data.connections[player] = nil
                end
            end)
            
        else
            -- 关闭其他玩家发光
            WindUI:Notify({
                Title = "提示",
                Content = "其他玩家发光已关闭",
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
            
            -- 移除所有玩家的灯光
            for player, lights in pairs(data.playerLights) do
                if player and lights then
                    for _, light in ipairs(lights) do
                        pcall(function() light:Destroy() end)
                    end
                end
            end
            
            -- 断开所有连接
            for key, connection in pairs(data.connections) do
                if connection then
                    connection:Disconnect()
                end
            end
            
            -- 重置数据
            data.playerLights = {}
            data.connections = {}
        end
    end
})

Tabs.General:Button({
    Title = "死亡笔记",
    Desc = "加载死亡笔记脚本",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/dingding123hhh/tt/main/%E6%AD%BB%E4%BA%A1%E7%AC%94%E8%AE%B0%20(1).txt", "死亡笔记脚本")
    end
})

Tabs.General:Button({
    Title = "踏空",
    Desc = "加载踏空脚本",
    Callback = function()
        safeLoadScript('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Float', "踏空脚本")
    end
})

Tabs.General:Button({
    Title = "无限跳",
    Desc = "加载无限跳脚本",
    Callback = function()
        safeLoadScript("https://pastebin.com/raw/V5PQy3y0", "无限跳脚本")
    end
})

Tabs.General:Button({
    Title = "显示FPS",
    Desc = "显示FPS计数器",
    Callback = function()
        safeLoadScript("https://pastefy.app/d9j82YJr/raw", "FPS显示脚本")
    end
})

Tabs.General:Button({
    Title = "玩家进入提示",
    Desc = "玩家进入游戏提示",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/boyscp/scriscriptsc/main/bbn.lua", "玩家提示脚本")
    end
})

Tabs.General:Button({
    Title = "电脑键盘",
    Desc = "虚拟电脑键盘",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", "虚拟键盘脚本")
    end
})

Tabs.General:Section({Title = "光影与画质"})

Tabs.General:Button({
    Title = "光影",
    Desc = "加载光影效果",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/MZEEN2424/Graphics/main/Graphics.xml", "光影脚本")
    end
})

Tabs.General:Button({
    Title = "光影2",
    Desc = "加载第二种光影效果",
    Callback = function()
        safeCall(function()
            -- Roblox Graphics Enhancher
            local light = game.Lighting
            for i, v in pairs(light:GetChildren()) do
                v:Destroy()
            end

            local ter = workspace.Terrain
            local color = Instance.new("ColorCorrectionEffect")
            local bloom = Instance.new("BloomEffect")
            local sun = Instance.new("SunRaysEffect")
            local blur = Instance.new("BlurEffect")

            color.Parent = light
            bloom.Parent = light
            sun.Parent = light
            blur.Parent = light

            -- enable or disable shit
            local config = {
                Terrain = true;
                ColorCorrection = true;
                Sun = true;
                Lighting = true;
                BloomEffect = true;
            }

            -- settings {
            color.Enabled = false
            color.Contrast = 0.15
            color.Brightness = 0.1
            color.Saturation = 0.25
            color.TintColor = Color3.fromRGB(255, 222, 211)

            bloom.Enabled = false
            bloom.Intensity = 0.1

            sun.Enabled = false
            sun.Intensity = 0.2
            sun.Spread = 1

            bloom.Enabled = false
            bloom.Intensity = 0.05
            bloom.Size = 32
            bloom.Threshold = 1

            blur.Enabled = false
            blur.Size = 6

            -- settings }

            if config.ColorCorrection then
                color.Enabled = true
            end

            if config.Sun then
                sun.Enabled = true
            end

            if config.Terrain then
                -- settings {
                ter.WaterWaveSize = 0.1
                ter.WaterWaveSpeed = 22
                ter.WaterTransparency = 0.9
                ter.WaterReflectance = 0.05
                -- settings }
            end
            if config.Lighting then
                -- settings {
                light.Ambient = Color3.fromRGB(0, 0, 0)
                light.Brightness = 4
                light.ColorShift_Bottom = Color3.fromRGB(0, 0, 0)
                light.ColorShift_Top = Color3.fromRGB(0, 0, 0)
                light.ExposureCompensation = 0
                light.FogColor = Color3.fromRGB(132, 132, 132)
                light.GlobalShadows = true
                light.OutdoorAmbient = Color3.fromRGB(112, 117, 128)
                light.Outlines = false
                -- settings }
            end
            local a = game.Lighting
            a.Ambient = Color3.fromRGB(33, 33, 33)
            a.Brightness = 5.69
            a.ColorShift_Bottom = Color3.fromRGB(0, 0, 0)
            a.ColorShift_Top = Color3.fromRGB(255, 247, 237)
            a.EnvironmentDiffuseScale = 0.105
            a.EnvironmentSpecularScale = 0.522
            a.GlobalShadows = true
            a.OutdoorAmbient = Color3.fromRGB(51, 54, 67)
            a.ShadowSoftness = 0.18
            a.GeographicLatitude = -15.525
            a.ExposureCompensation = 0.75
            bloom.Enabled = true
            bloom.Intensity = 0.99
            bloom.Size = 9999 
            bloom.Threshold = 0
            local c = Instance.new("ColorCorrectionEffect", a)
            c.Brightness = 0.015
            c.Contrast = 0.25
            c.Enabled = true
            c.Saturation = 0.2
            c.TintColor = Color3.fromRGB(217, 145, 57)
            
            local d = Instance.new("DepthOfFieldEffect", a)
            d.Enabled = true
            d.FarIntensity = 0.077
            d.FocusDistance = 21.54
            d.InFocusRadius = 20.77
            d.NearIntensity = 0.277
            local e = Instance.new("ColorCorrectionEffect", a)
            e.Brightness = 0
            e.Contrast = -0.07
            e.Saturation = 0
            e.Enabled = true
            e.TintColor = Color3.fromRGB(255, 247, 239)
            local e2 = Instance.new("ColorCorrectionEffect", a)
            e2.Brightness = 0.2
            e2.Contrast = 0.45
            e2.Saturation = -0.1
            e2.Enabled = true
            e2.TintColor = Color3.fromRGB(255, 255, 255)
            local s = Instance.new("SunRaysEffect", a)
            s.Enabled = true
            s.Intensity = 0.01
            s.Spread = 0.146

            WindUI:Notify({
                Title = "成功",
                Content = "RTX Graphics loaded! Created by BrickoIcko",
                Duration = 3,
                Color = ColorSystem.successColor
            })
        end, "加载光影2")
    end
})

Tabs.General:Button({
    Title = "画质",
    Desc = "提升游戏画质",
    Callback = function()
        safeLoadScript("https://pastebin.com/raw/jHBfJYmS", "画质提升脚本")
    end
})

Tabs.General:Section({Title = "18禁用"})

Tabs.General:Button({
    Title = "撸管R6",
    Desc = "R6角色动画",
    Callback = function()
        safeLoadScript("https://pastefy.app/wa3v2Vgm/raw", "R6动画脚本")
    end
})

Tabs.General:Button({
    Title = "撸管R15",
    Desc = "R15角色动画",
    Callback = function()
        safeLoadScript("https://pastefy.app/YZoglOyJ/raw", "R15动画脚本")
    end
})

Tabs.General:Section({Title = "飞行区"})

Tabs.General:Button({
    Title = "飞行",
    Desc = "飞行脚本",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt", "飞行脚本")
    end
})

Tabs.General:Button({
    Title = "飞车",
    Desc = "飞车脚本",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/dingding123hhh/vb/main/%E9%A3%9E%E8%BD%A6.lua", "飞车脚本")
    end
})

Tabs.General:Section({Title = "甩飞区"})

Tabs.General:Button({
    Title = "铁拳",
    Desc = "铁拳甩飞脚本",
    Callback = function()
        safeLoadScript('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt', "铁拳甩飞脚本")
    end
})

Tabs.General:Button({
    Title = "旋转甩飞",
    Desc = "旋转甩飞脚本",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/dingding123hhh/tt/main/%E6%97%8B%E8%BD%AC.lua", "旋转甩飞脚本")
    end
})

Tabs.General:Button({
    Title = "碰到就飞",
    Desc = "接触甩飞脚本",
    Callback = function()
        safeLoadScript("https://raw.githubusercontent.com/0Ben1/fe./main/Fling%20GUI", "接触甩飞脚本")
    end
})

-- 甩飞与传送标签页
Tabs.FlyAndTeleport:Section({Title = "甩飞功能"})

Tabs.FlyAndTeleport:Button({
    Title = "指定甩飞(简易版)",
    Desc = "指定目标甩飞",
    Callback = function()
        safeLoadScript('https://pastefy.app/9SmQXduA/raw', "指定甩飞脚本")
    end
})

Tabs.FlyAndTeleport:Button({
    Title = "全图甩飞",
    Desc = "全图范围甩飞",
    Callback = function()
        safeLoadScript("https://pastebin.com/raw/zqyDSUWX", "全图甩飞脚本")
    end
})

Tabs.FlyAndTeleport:Section({Title = "传送功能"})

Tabs.FlyAndTeleport:Button({
    Title = "传送到玩家",
    Desc = "选择玩家并传送",
    Callback = function()
        safeCall(function()
            local players = game:GetService("Players"):GetPlayers()
            local playerNames = {}
            for _, player in ipairs(players) do
                if player ~= game.Players.LocalPlayer then
                    table.insert(playerNames, player.Name)
                end
            end
            
            if #playerNames == 0 then
                WindUI:Notify({
                    Title = "错误",
                    Content = "没有其他玩家可传送",
                    Duration = 3,
                    Color = ColorSystem.errorColor
                })
                return
            end
            
            -- 这里可以添加玩家选择界面
            WindUI:Notify({
                Title = "提示",
                Content = "传送功能需要选择目标玩家",
                Duration = 3,
                Color = ColorSystem.primaryColor
            })
        end, "传送功能")
    end
})

Tabs.FlyAndTeleport:Button({
    Title = "传送到地点",
    Desc = "传送到指定坐标",
    Callback = function()
        safeCall(function()
            local character = game.Players.LocalPlayer.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.CFrame = CFrame.new(0, 100, 0)
                    WindUI:Notify({
                        Title = "成功",
                        Content = "已传送到空中",
                        Duration = 3,
                        Color = ColorSystem.successColor
                    })
                end
            end
        end, "传送到地点")
    end
})

    Tabs.Oth:Section({Title = "偷走脑红汉化脚本"})

    Tabs.Oth:Button({
        Title = "MIRANDA HUB (无卡密)",
        Desc = "汉化",
        Callback = function()
            WindUI:Notify({
                Title = "提示", 
                Content = "正在加载脚本...", 
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
            safeLoadScript("https://raw.githubusercontent.com/jbu7666gvv/jianhan/refs/heads/main/1", "MIRANDA HUB脚本")
        end
    })

    -- 工具页面
    Tabs.Other:Section({Title = "系统工具"})

    Tabs.Other:Button({
        Title = "重新加载界面",
        Desc = "重新加载用户界面",
        Callback = function()
            WindUI:Notify({
                Title = "提示", 
                Content = "重新加载界面中...", 
                Duration = 2,
                Color = ColorSystem.primaryColor
            })
            
            -- 保存重要信息
            local savedData = {
                keySystemEnabled = Window.KeySystem and true or false,
                key = Window.KeySystem and Window.KeySystem.Key or nil
            }
            
            -- 延迟执行以确保通知显示
            task_wait(1)
            
            -- 完全清理UI
            if Window then
                pcall(function() Window:Destroy() end)
                Window = nil
            end
            
            -- 强制垃圾回收
            for i = 1, 5 do
                task_wait(0.1)
                collectgarbage("collect")
            end
            
            -- 使用游戏的重置功能
            if game:GetService("CoreGui"):FindFirstChild("WindUI") then
                game:GetService("CoreGui").WindUI:Destroy()
            end
            
            -- 重新执行脚本的替代方案
            task_wait(0.5)
            
            -- 方法1：尝试通过重新获取脚本来重启
            local success, result = pcall(function()
                local restartScript = httpGet("https://raw.githubusercontent.com/jbu7666gvv/benhan/main/benhan.lua")
                if restartScript then
                    -- 创建新的脚本来执行
                    local newScript = Instance.new("LocalScript")
                    newScript.Source = restartScript
                    newScript.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerScripts")
                else
                    error("无法获取重启脚本")
                end
            end)
            
            if not success then
                -- 方法2：简单的重新初始化
                WindUI:Notify({
                    Title = "错误", 
                    Content = "完全重启失败，请手动重新执行脚本", 
                    Duration = 5,
                    Color = ColorSystem.errorColor
                })
            end
        end
    })

    Tabs.Other:Button({
        Title = "清理缓存",
        Desc = "清理系统缓存",
        Callback = function()
            collectgarbage("collect")
            WindUI:Notify({
                Title = "成功", 
                Content = "系统缓存已清理", 
                Duration = 3,
                Color = ColorSystem.successColor
            })
        end
    })
    
    Tabs.Other:Button({
    Title = "切换服务器",
    Desc = "切换到相同游戏的另一个服务器",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local placeId = game.PlaceId
        
        TeleportService:Teleport(placeId, game.Players.LocalPlayer)
    end
})

Tabs.Other:Button({
    Title = "重新加入服务器",
    Desc = "尝试重新加入当前服务器",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local placeId = game.PlaceId
        local jobId = game.JobId
        
        TeleportService:TeleportToPlaceInstance(placeId, jobId, game.Players.LocalPlayer)
    end
})

Tabs.Other:Button({
    Title = "复制服务器邀请链接",
    Desc = "复制当前服务器的邀请链接到剪贴板",
    Callback = function()
        local inviteLink = "roblox://experiences/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
        setclipboard(inviteLink)
        WindUI:Notify({
            Title = "邀请链接已复制",
            Content = "链接已复制到剪贴板",
            Duration = 3
        })
    end
})

Tabs.Other:Button({
    Title = "复制服务器ID",
    Desc = "复制当前服务器的Job ID到剪贴板",
    Callback = function()
        setclipboard(game.JobId)
        WindUI:Notify({
            Title = "服务器ID已复制",
            Content = "Job ID: " .. game.JobId,
            Duration = 3
        })
    end
})


Tabs.Other:Button({
    Title = "服务器信息",
    Desc = "显示当前服务器的信息",
    Callback = function()
        local players = game.Players:GetPlayers()
        local maxPlayers = game.Players.MaxPlayers
        local placeId = game.PlaceId
        local jobId = game.JobId
        local serverType = game:GetService("RunService"):IsStudio() and "Studio" or "Live"
        
        WindUI:Notify({
            Title = "服务器信息",
            Content = string.format("玩家数量: %d/%d\nPlace ID: %d\nJob ID: %s\n服务器类型: %s", #players, maxPlayers, placeId, jobId, serverType),
            Duration = 10
        })
    end
})

Tabs.Other:Slider({
    Title = "透明度",
    Value = {
        Min = 0,
        Max = 1,
        Default = 0.2
    },
    Step = 0.1,
    Callback = function(value)
        Window:ToggleTransparency(tonumber(value) > 0)
        WindUI.TransparencyValue = tonumber(value)
    end
})

    -- 完成通知
    WindUI:Notify({
        Title = "本熊脚本", 
        Content = "界面加载完成！", 
        Duration = 4,
        Color = ColorSystem.successColor
    })

end, enhancedErrorHandler)

if not success then
    enhancedErrorHandler(err)
end
